{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\My Workspace\\\\WhiteHat Jr\\\\Barter-System-App\\\\screens\\\\Exchange.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport db from \"../config\";\nimport AppHeader from \"../components/AppHeader\";\n\nvar ExchangeScreen = function (_Component) {\n  _inherits(ExchangeScreen, _Component);\n\n  function ExchangeScreen() {\n    var _this;\n\n    _classCallCheck(this, ExchangeScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExchangeScreen).call(this));\n\n    _this.addItem = function (itemName, description) {\n      var email = _this.state.email;\n      exchangeId = _this.createUniqueId();\n      db.collection('exchange_requests').add({\n        'user_email': email,\n        'item_name': itemName,\n        'description': description,\n        'exchangeId': exchangeId,\n        \"item_status\": \"requested\",\n        \"item_value\": _this.state.itemValue,\n        \"date\": firebase.firestore.FieldValue.serverTimestamp()\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n\n      _this.getExchangeRequest();\n\n      db.collection('Users').where(\"user_email\", \"==\", email).get().then().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsExchangeRequestActive: true\n          });\n        });\n      });\n\n      _this.setState({\n        itemName: '',\n        description: '',\n        itemValue: \"\"\n      });\n\n      return Alert.alert('Item ready to exchange', '', [{\n        text: 'OK',\n        onPress: function onPress() {}\n      }]);\n    };\n\n    _this.getExchangeRequest = function () {\n      db.collection('exchange_requests').where('user_email', '==', _this.state.email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().item_status !== \"received\") {\n            _this.setState({\n              exchangeId: doc.data().exchangeId,\n              requestedItemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n              itemValue: doc.data().item_value,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.receivedItem = function (itemName) {\n      var userId = _this.state.email;\n      var exchangeId = _this.state.exchangeId;\n      db.collection('received_items').add({\n        \"user_id\": userId,\n        \"item_name\": itemName,\n        \"exchange_id\": exchangeId,\n        \"itemStatus\": \"received\"\n      });\n    };\n\n    _this.updateExchangeRequestStatus = function () {\n      db.collection('requested_requests').doc(_this.state.docId).update({\n        item_status: 'recieved'\n      });\n      db.collection('users').where('user_email', '==', _this.state.email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsExchangeRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('user_email', '==', _this.state.email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('exchangeId', '==', _this.state.exchangeId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var itemName = doc.data().item_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the item \" + itemName,\n                \"notification_status\": \"unread\",\n                \"item_name\": itemName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      email: firebase.auth().currentUser.email,\n      itemName: \"\",\n      description: \"\",\n      requestedItemName: \"\",\n      exchangeId: \"\",\n      itemStatus: \"\",\n      docId: \"\",\n      itemValue: \"\",\n      currencyCode: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ExchangeScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsExchangeRequestActive\",\n    value: function getIsExchangeRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('user_email', '==', this.state.email).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsExchangeRequestActive: doc.data().IsExchangeRequestActive,\n            userDocId: doc.id,\n            currencyCode: doc.data().currency_code\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var _this3 = this;\n\n      fetch(\"http://data.fixer.io/api/latest?access_key=30b9d3f9fc3e897b82537e51076e261f&format=1\").then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        var currencyCode = _this3.state.currencyCode;\n        var currency = responseData.rates.INR;\n        var value = 69 / currency;\n        console.log(value);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getExchangeRequest();\n      this.getIsExchangeRequestActive();\n      this.getValue();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (this.state.IsExchangeRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          }\n        }, \"Item Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          }\n        }, this.state.requestedItemName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          }\n        }, \" Item Value \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          }\n        }, this.state.itemValue)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          }\n        }, \" Item Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          }\n        }, this.state.itemStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this4.sendNotification();\n\n            _this4.updateExchangeRequestStatus();\n\n            _this4.receivedItem(_this4.state.requestedItemName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          }\n        }, \"I recieved the Item\")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        }, React.createElement(AppHeader, {\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item Name\",\n          maxLength: 10,\n          onChangeText: function onChangeText(text) {\n            _this4.setState({\n              itemName: text\n            });\n          },\n          value: this.state.itemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), React.createElement(TextInput, {\n          multiline: true,\n          numberOfLines: 4,\n          style: [styles.formTextInput, {\n            height: 100\n          }],\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(text) {\n            _this4.setState({\n              description: text\n            });\n          },\n          value: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          }\n        }), React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item Value\",\n          maxLength: 8,\n          onChangeText: function onChangeText(text) {\n            _this4.setState({\n              itemValue: text\n            });\n          },\n          value: this.state.itemValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this4.addItem(_this4.state.itemName, _this4.state.description);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#ffff',\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          }\n        }, \"Add Item\"))));\n      }\n    }\n  }]);\n\n  return ExchangeScreen;\n}(Component);\n\nexport { ExchangeScreen as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: 'blue',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["D:/My Workspace/WhiteHat Jr/Barter-System-App/screens/Exchange.js"],"names":["React","Component","firebase","db","AppHeader","ExchangeScreen","addItem","itemName","description","email","state","exchangeId","createUniqueId","collection","add","itemValue","firestore","FieldValue","serverTimestamp","catch","error","console","getExchangeRequest","where","get","then","snapshot","forEach","doc","id","update","IsExchangeRequestActive","setState","Alert","alert","text","onPress","data","item_status","requestedItemName","item_name","itemStatus","item_value","docId","receivedItem","userId","updateExchangeRequestStatus","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","auth","currentUser","currencyCode","Math","random","toString","substring","onSnapshot","querySnapshot","userDocId","currency_code","fetch","response","json","responseData","currency","rates","INR","value","log","getIsExchangeRequestActive","getValue","flex","justifyContent","borderColor","borderWidth","alignItems","padding","margin","backgroundColor","width","alignSelf","height","marginTop","props","navigation","styles","formTextInput","button","color","fontSize","fontWeight","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TextInput,KeyboardAvoidingView,TouchableOpacity,Alert, ToastAndroid } from 'react-native';\nimport * as firebase from 'firebase'\nimport 'firebase/firestore';\nimport db from '../config';\nimport AppHeader from '../components/AppHeader'\n\nexport default class ExchangeScreen extends Component{\n\n  constructor(){\n    super()\n    this.state = {\n      email : firebase.auth().currentUser.email,\n      itemName : \"\",\n      description : \"\",\n      requestedItemName:\"\",\n      exchangeId:\"\",\n      itemStatus:\"\",\n      docId: \"\",\n      itemValue:\"\",\n      currencyCode:\"\"\n    }\n  }\n\n  createUniqueId(){\n    return Math.random().toString(36).substring(7);\n  }\n\n  addItem=(itemName, description)=>{\n    var email = this.state.email\n    exchangeId = this.createUniqueId()\n    db.collection('exchange_requests').add({\n      'user_email' : email,\n      'item_name': itemName,\n      'description' : description,\n      'exchangeId'  : exchangeId,\n      \"item_status\" : \"requested\",\n      \"item_value\"  : this.state.itemValue,\n      \"date\"       : firebase.firestore.FieldValue.serverTimestamp()\n     })\n     .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n    this.getExchangeRequest()\n     db.collection('Users').where(\"user_email\",\"==\",email).get()\n      .then()\n      .then((snapshot)=>{\n        snapshot.forEach((doc)=>{\n          db.collection('users').doc(doc.id).update({\n        IsExchangeRequestActive: true\n        })\n      })\n    })\n    \n     this.setState({\n       itemName : '',\n       description :'',\n       itemValue: \"\"\n     })\n\n     \n     return Alert.alert(\n          'Item ready to exchange',\n          '',\n          [\n            {text: 'OK', onPress: () => {\n\n            }}\n          ]\n      );\n  }\n\n    getIsExchangeRequestActive(){\n      db.collection('users')\n      .where('user_email','==',this.state.email)\n      .onSnapshot(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          this.setState({\n            IsExchangeRequestActive:doc.data().IsExchangeRequestActive,\n            userDocId : doc.id,\n            currencyCode: doc.data().currency_code\n          })\n        })\n      })\n    }\n\n    getExchangeRequest =()=>{\n    db.collection('exchange_requests')\n      .where('user_email','==',this.state.email)\n      .get()\n      .then((snapshot)=>{\n        snapshot.forEach((doc)=>{\n          if(doc.data().item_status !== \"received\"){\n            this.setState({\n              exchangeId : doc.data().exchangeId,\n              requestedItemName: doc.data().item_name,\n              itemStatus:doc.data().item_status,\n              itemValue : doc.data().item_value,\n              docId     : doc.id\n            })\n          }\n        })\n    })\n  }\n\n  getValue(){\n    fetch(\"http://data.fixer.io/api/latest?access_key=30b9d3f9fc3e897b82537e51076e261f&format=1\")\n    .then(response=>{\n      return response.json();\n    }).then(responseData =>{\n      var currencyCode = this.state.currencyCode\n      var currency = responseData.rates.INR\n      var value =  69 / currency\n      console.log(value);\n    })\n    }\n\n  componentDidMount(){\n    this.getExchangeRequest()\n    this.getIsExchangeRequestActive()\n    this.getValue()\n  }\n\n  receivedItem=(itemName)=>{\n    var userId = this.state.email\n    var exchangeId = this.state.exchangeId\n    db.collection('received_items').add({\n        \"user_id\": userId,\n        \"item_name\":itemName,\n        \"exchange_id\"  : exchangeId,\n        \"itemStatus\"  : \"received\",\n\n    })\n  }\n\n  updateExchangeRequestStatus=()=>{\n    db.collection('requested_requests').doc(this.state.docId)\n    .update({\n      item_status : 'recieved'\n  })\n\n  db.collection('users').where('user_email','==',this.state.email).get()\n    .then((snapshot)=>{\n      snapshot.forEach((doc) => {\n        //updating the doc\n        db.collection('users').doc(doc.id).update({\n          IsExchangeRequestActive: false\n        })\n      })\n    })\n\n}\n\n  sendNotification=()=>{\n    //to get the first name and last name\n    db.collection('users').where('user_email','==',this.state.email).get()\n    .then((snapshot)=>{\n      snapshot.forEach((doc)=>{\n        var name = doc.data().first_name\n        var lastName = doc.data().last_name\n\n        // to get the donor id and item name\n        db.collection('all_notifications').where('exchangeId','==',this.state.exchangeId).get()\n        .then((snapshot)=>{\n          snapshot.forEach((doc) => {\n            var donorId  = doc.data().donor_id\n            var itemName =  doc.data().item_name\n\n            //targert user id is the donor id to send notification to the user\n            db.collection('all_notifications').add({\n              \"targeted_user_id\" : donorId,\n              \"message\" : name +\" \" + lastName + \" received the item \" + itemName ,\n              \"notification_status\" : \"unread\",\n              \"item_name\" : itemName\n            })\n          })\n        })\n      })\n    })\n  }\n\n  render(){\n    \n      if (this.state.IsExchangeRequestActive === true){\n       \n        return(\n          <View style = {{flex:1,justifyContent:'center'}}>\n           <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n           <Text>Item Name</Text>\n           <Text>{this.state.requestedItemName}</Text>\n           </View>\n           <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n           <Text> Item Value </Text>\n\n           <Text>{this.state.itemValue}</Text>\n           </View>\n           <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\n           <Text> Item Status </Text>\n  \n           <Text>{this.state.itemStatus}</Text>\n           </View>\n  \n           <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\n           onPress={()=>{\n             this.sendNotification()\n             this.updateExchangeRequestStatus();\n             this.receivedItem(this.state.requestedItemName)\n           }}>\n           <Text>I recieved the Item</Text>\n           </TouchableOpacity>\n         </View>\n       )\n  \n      }\n      else {\n    return(\n      <View style={{flex:1}}>\n      <AppHeader navigation ={this.props.navigation}/>\n      <KeyboardAvoidingView style={{flex:1,justifyContent:'center', alignItems:'center'}}>\n        <TextInput\n          style={styles.formTextInput}\n          placeholder ={\"Item Name\"}\n          maxLength ={10}\n          onChangeText={(text)=>{\n            this.setState({\n              itemName: text\n            })\n          }}\n          value={this.state.itemName}\n        />\n        <TextInput\n          multiline\n          numberOfLines={4}\n          style={[styles.formTextInput,{height:100}]}\n          placeholder ={\"Description\"}\n          onChangeText={(text)=>{\n            this.setState({\n              description: text\n            })\n          }}\n          value={this.state.description}\n\n        />\n        <TextInput\n            style={styles.formTextInput}\n            placeholder ={\"Item Value\"}\n            maxLength ={8}\n            onChangeText={(text)=>{\n              this.setState({\n                itemValue: text\n              })\n            }}\n            value={this.state.itemValue}\n          />\n        <TouchableOpacity\n          style={[styles.button,{marginTop:10}]}\n          onPress = {()=>{this.addItem(this.state.itemName, this.state.description)}}\n          >\n          <Text style={{color:'#ffff', fontSize:18, fontWeight:'bold'}}>Add Item</Text>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n      </View>\n    )\n  }\n}\n}\n\n\nconst styles = StyleSheet.create({\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'blue',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n  },\n\n})"]},"metadata":{},"sourceType":"module"}