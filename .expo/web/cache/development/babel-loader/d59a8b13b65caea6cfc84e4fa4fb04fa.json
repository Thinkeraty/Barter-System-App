{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\My Workspace\\\\WhiteHat Jr\\\\Barter-System-App\\\\components\\\\SwipeableFlatlist.js\";\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Icon } from 'react-native-elements';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport db from \"../config\";\n\nvar SwipeableFlatlist = function (_Component) {\n  _inherits(SwipeableFlatlist, _Component);\n\n  function SwipeableFlatlist(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeableFlatlist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwipeableFlatlist).call(this, props));\n\n    _this.updateMarkAsread = function (notification) {\n      db.collection(\"all_notifications\").doc(notification.doc_id).update({\n        \"notification_status\": \"read\"\n      });\n    };\n\n    _this.onSwipeValueChange = function (swipeData) {\n      var allNotifications = _this.state.allNotifications;\n      var key = swipeData.key,\n          value = swipeData.value;\n\n      if (value < -Dimensions.get('window').width) {\n        var newData = _toConsumableArray(allNotifications);\n\n        var prevIndex = allNotifications.findIndex(function (item) {\n          return item.key === key;\n        });\n\n        _this.updateMarkAsread(allNotifications[prevIndex]);\n\n        newData.splice(prevIndex, 1);\n\n        _this.setState({\n          allNotifications: newData\n        });\n      }\n\n      ;\n    };\n\n    _this.renderItem = function (data) {\n      return React.createElement(ListItem, {\n        title: data.item.item_name,\n        titleStyle: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        subtitle: data.item.message,\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      });\n    };\n\n    _this.renderHiddenItem = function () {\n      return React.createElement(View, {\n        style: styles.rowBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(View, {\n        style: [styles.backRightBtn, styles.backRightBtnRight],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(Text, {\n        style: styles.backTextWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      })));\n    };\n\n    _this.state = {\n      allNotifications: _this.props.allNotifications\n    };\n    return _this;\n  }\n\n  _createClass(SwipeableFlatlist, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, React.createElement(SwipeListView, {\n        disableRightSwipe: true,\n        data: this.state.allNotifications,\n        renderItem: this.renderItem,\n        renderHiddenItem: this.renderHiddenItem,\n        rightOpenValue: -Dimensions.get('window').width,\n        previewRowKey: '0',\n        previewOpenValue: -40,\n        previewOpenDelay: 3000,\n        onSwipeValueChange: this.onSwipeValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }));\n    }\n  }]);\n\n  return SwipeableFlatlist;\n}(Component);\n\nexport { SwipeableFlatlist as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    flex: 1\n  },\n  backTextWhite: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    fontSize: 15\n  },\n  rowBack: {\n    alignItems: 'center',\n    backgroundColor: '#29b6f6',\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingLeft: 15\n  },\n  backRightBtn: {\n    alignItems: 'center',\n    bottom: 0,\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    width: 100\n  },\n  backRightBtnRight: {\n    backgroundColor: '#29b6f6',\n    right: 0\n  }\n});","map":{"version":3,"sources":["D:/My Workspace/WhiteHat Jr/Barter-System-App/components/SwipeableFlatlist.js"],"names":["React","Component","ListItem","Icon","SwipeListView","db","SwipeableFlatlist","props","updateMarkAsread","notification","collection","doc","doc_id","update","onSwipeValueChange","swipeData","allNotifications","state","key","value","Dimensions","get","width","newData","prevIndex","findIndex","item","splice","setState","renderItem","data","item_name","color","fontWeight","message","renderHiddenItem","styles","rowBack","backRightBtn","backRightBtnRight","backTextWhite","container","StyleSheet","create","backgroundColor","flex","fontSize","alignItems","flexDirection","justifyContent","paddingLeft","bottom","position","top","right"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Animated,\n    Dimensions,\n    StyleSheet,\n    Text,\n    TouchableHighlight,\n    View,\n} from 'react-native';\nimport { ListItem, Icon } from 'react-native-elements';\n\nimport { SwipeListView } from 'react-native-swipe-list-view';\n\nimport db from '../config';\n\n\nexport default class SwipeableFlatlist extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      allNotifications : this.props.allNotifications,\n    };\n  }\n\n\n  updateMarkAsread =(notification)=>{\n    db.collection(\"all_notifications\").doc(notification.doc_id).update({\n      \"notification_status\" : \"read\"\n    })\n  }\n\n\n  onSwipeValueChange = swipeData => {\n    var allNotifications = this.state.allNotifications\n      const {key,value} = swipeData;\n\n      if(value < -Dimensions.get('window').width){\n        const newData = [...allNotifications];\n        const prevIndex = allNotifications.findIndex(item => item.key === key);\n        this.updateMarkAsread(allNotifications[prevIndex]);\n        newData.splice(prevIndex, 1);\n        this.setState({allNotifications : newData})\n    };\n};\n\n\n\n  renderItem = data => (\n  \n        <ListItem\n          title={data.item.item_name}\n          titleStyle={{ color: 'black', fontWeight: 'bold' }}\n          subtitle={data.item.message}\n          bottomDivider\n        />\n  );\n\n  renderHiddenItem = () => (\n      <View style={styles.rowBack}>\n          <View style={[styles.backRightBtn, styles.backRightBtnRight]}>\n              <Text style={styles.backTextWhite}></Text>\n          </View>\n      </View>\n  );\n\n  render(){\n    return(\n      <View style={styles.container}>\n          <SwipeListView\n              disableRightSwipe\n              data={this.state.allNotifications}\n              renderItem={this.renderItem}\n              renderHiddenItem={this.renderHiddenItem}\n              rightOpenValue={-Dimensions.get('window').width}\n              previewRowKey={'0'}\n              previewOpenValue={-40}\n              previewOpenDelay={3000}\n              onSwipeValueChange={this.onSwipeValueChange}\n          />\n      </View>\n    )\n  }\n\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        flex: 1,\n    },\n    backTextWhite: {\n        color: '#FFF',\n        fontWeight:'bold',\n        fontSize:15\n    },\n    rowBack: {\n        alignItems: 'center',\n        backgroundColor: '#29b6f6',\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingLeft: 15,\n    },\n    backRightBtn: {\n        alignItems: 'center',\n        bottom: 0,\n        justifyContent: 'center',\n        position: 'absolute',\n        top: 0,\n        width: 100,\n    },\n    backRightBtnRight: {\n        backgroundColor: '#29b6f6',\n        right: 0,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}