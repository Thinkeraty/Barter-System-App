{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\My Workspace\\\\WhiteHat Jr\\\\Barter-System-App\\\\components\\\\CustomSidebarMenu.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { PlatForm } from \"react-native-web/dist/index\";\nimport { DrawerItems } from 'react-navigation-drawer';\nimport { Avatar } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar CustomSidebarMenu = function (_Component) {\n  _inherits(CustomSidebarMenu, _Component);\n\n  function CustomSidebarMenu() {\n    var _this;\n\n    _classCallCheck(this, CustomSidebarMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomSidebarMenu).call(this));\n\n    _this.getUserProfile = function () {\n      db.collection('Users').where('user_email', '==', _this.state.userId).onSnapshot(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            name: doc.data().first_name + ' ' + doc.data().last_name\n          });\n        });\n      });\n    };\n\n    _this.fetchImage = function (imageName) {\n      var storageRef = firebase.storage().ref().child('user_profiles/' + imageName);\n      storageRef.getDownloadURL().then(function (url) {\n        _this.setState({\n          image: url\n        });\n      }).catch(function (err) {\n        _this.setState({\n          image: '#'\n        });\n      });\n    };\n\n    _this.uploadImage = function _callee(uri, imageName) {\n      var response, blob, ref;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 5:\n              blob = _context.sent;\n              ref = firebase.storage().ref().child('user_profiles/' + imageName);\n              return _context.abrupt(\"return\", ref.put(blob).then(function (response) {\n                _this.fetchImage(imageName);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.selectPicture = function _callee2() {\n      var _await$ImagePicker$la, cancel, uri;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              _await$ImagePicker$la = _context2.sent;\n              cancel = _await$ImagePicker$la.cancel;\n              uri = _await$ImagePicker$la.uri;\n\n              if (!cancel) {\n                _this.uploadImage(uri, _this.state.userId);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      image: '#',\n      name: '',\n      docId: ''\n    };\n    return _this;\n  }\n\n  _createClass(CustomSidebarMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchImage(this.state.userId);\n      this.getUserProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.5,\n          alignItems: 'center',\n          backgroundColor: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        source: {\n          uri: this.state.image\n        },\n        size: \"large\",\n        onPress: function onPress() {\n          _this2.selectPicture();\n        },\n        containerStyle: styles.imgContainer,\n        showEditButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          paddingTop: 10,\n          color: '#000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, this.state.name)), React.createElement(DrawerItems, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end',\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('WelcomeScreen');\n\n          firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }, \"Logout\"))));\n    }\n  }]);\n\n  return CustomSidebarMenu;\n}(Component);\n\nexport { CustomSidebarMenu as default };\nvar styles = StyleSheet.create({\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 30,\n    padding: 10,\n    height: 50,\n    width: 200,\n    borderWidth: 2,\n    marginTop: 20,\n    paddingTop: 5,\n    borderRadius: 15,\n    backgroundColor: 'orange',\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  buttonText: {\n    color: 'white',\n    marginRight: 60,\n    fontWeight: '200',\n    fontSize: 17,\n    marginLeft: 70,\n    marginTop: 5\n  },\n  imgContainer: {\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["D:/My Workspace/WhiteHat Jr/Barter-System-App/components/CustomSidebarMenu.js"],"names":["React","Component","PlatForm","DrawerItems","Avatar","ImagePicker","Permissions","db","firebase","CustomSidebarMenu","getUserProfile","collection","where","state","userId","onSnapshot","snapshot","forEach","doc","setState","name","data","first_name","last_name","fetchImage","imageName","storageRef","storage","ref","child","getDownloadURL","then","url","image","catch","err","uploadImage","uri","fetch","response","blob","put","selectPicture","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancel","auth","currentUser","email","docId","flex","alignItems","backgroundColor","styles","imgContainer","fontSize","fontWeight","paddingTop","color","props","justifyContent","paddingBottom","button","navigation","navigate","signOut","buttonText","StyleSheet","create","marginLeft","padding","height","width","borderWidth","marginTop","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginRight"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport {View, Text,TouchableOpacity, StyleSheet, ImageBackground, PlatForm } from 'react-native';\nimport { DrawerItems} from 'react-navigation-drawer'\nimport { Avatar } from 'react-native-elements'\nimport * as ImagePicker from 'expo-image-picker'\nimport * as Permissions from  'expo-permissions'\n\nimport db from '../config'\nimport firebase from 'firebase';\n\nexport default class CustomSidebarMenu extends Component{\n  constructor() {\n    super()\n\n    this.state = {\n      userId: firebase.auth().currentUser.email,\n      image: '#',\n      name: '',\n      docId: ''\n    }\n  }\n\n  getUserProfile = () => {\n    db.collection('Users').where('user_email', '==', this.state.userId).onSnapshot(snapshot => {\n      snapshot.forEach(doc => {\n        this.setState({ name: doc.data().first_name + ' ' + doc.data().last_name })\n      })\n    })\n  }\n\n  fetchImage = (imageName) => {\n    var storageRef = firebase\n      .storage()\n      .ref()\n      .child('user_profiles/' + imageName)\n      \n      storageRef.getDownloadURL()\n        .then(url => {\n          this.setState({ image: url })\n        })\n        .catch(err => {\n          this.setState({ image: '#' })\n        })\n  }\n\n  uploadImage = async (uri, imageName) => {\n    var response = await fetch(uri)\n    var blob = await response.blob()\n    var ref = firebase\n      .storage()\n      .ref()\n      .child('user_profiles/' + imageName)\n      return ref.put(blob)\n        .then(response => {\n          this.fetchImage(imageName)\n        })\n  }\n\n  selectPicture = async () => {\n    const { cancel, uri } = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4,3],\n      quality: 1\n    })\n    if(!cancel) {\n      this.uploadImage(uri, this.state.userId)\n    }\n  }\n\n  componentDidMount() {\n    this.fetchImage(this.state.userId)\n    this.getUserProfile()\n  }\n\n  render(){\n    return(\n      <View style={{flex:1}}>\n        <View style={{flex: 0.5, alignItems:'center', backgroundColor:'#fff'}}> \n          <Avatar \n            rounded\n            source={{uri: this.state.image}}\n            size=\"large\"\n            onPress={() => {\n              this.selectPicture()\n            }}\n            containerStyle={styles.imgContainer}\n            showEditButton\n          />\n          <Text style={{fontSize: 20, fontWeight:'bold', paddingTop: 10, color: '#000' }}>{this.state.name}</Text>\n        </View>\n        <DrawerItems {...this.props}/>\n        <View style={{flex:1,justifyContent:'flex-end',paddingBottom:30}}>\n          <TouchableOpacity style={styles.button}\n          onPress = {() => {\n              this.props.navigation.navigate('WelcomeScreen')\n              firebase.auth().signOut()\n          }}>\n            <Text style={styles.buttonText}>Logout</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent:'center',\n    alignItems: 'center',\n    marginLeft: 30,\n    padding:10,\n    height: 50, \n    width: 200, \n    borderWidth: 2, \n    marginTop: 20, \n    paddingTop: 5, \n    borderRadius: 15,\n    backgroundColor: 'orange',\n    shadowColor: 'black',\n    shadowOffset: {\n        width: 0,\n        height: 8\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 10.32,\n    elevation: 16\n  },\n  buttonText: {\n    color: 'white',\n    marginRight: 60,\n    fontWeight: '200',\n    fontSize: 17,\n    marginLeft: 70,\n    marginTop: 5\n  },\n  imgContainer: {\n    marginTop: 20\n  }\n})"]},"metadata":{},"sourceType":"module"}